{"generation 1": {"variantId  41": {"parent": "1", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 27, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  42": {"parent": "2", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  43": {"parent": "3", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...]` (spoon.support.reflect.code.CtForEachImpl) \n---MP=bugLis.App line: 15, pointed element: CtForEachImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...]` (spoon.support.reflect.code.CtForEachImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  44": {"parent": "4", "gens": "14", "lineNo": "14", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 14, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "false"}, "variantId  45": {"parent": "5", "gens": "14", "lineNo": "12", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 12, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "false"}, "variantId  46": {"parent": "6", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  47": {"parent": "7", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  48": {"parent": "8", "gens": "14", "lineNo": "11", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 11, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  49": {"parent": "9", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  49"}, "variantId  50": {"parent": "10", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  50"}, "variantId  51": {"parent": "11", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `ends.put(length + 1, i)` (spoon.support.reflect.code.CtInvocationImpl) \n---MP=bugLis.App line: 27, pointed element: CtInvocationImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `ends.put(length + 1, i)` (spoon.support.reflect.code.CtInvocationImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  52": {"parent": "12", "gens": "14", "lineNo": "17", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 17, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "false"}, "variantId  53": {"parent": "13", "gens": "14", "lineNo": "11", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 11, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "false"}, "variantId  54": {"parent": "14", "gens": "14", "lineNo": "14", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 14, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "false"}, "variantId  55": {"parent": "15", "gens": "14", "lineNo": "24", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 24, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  56": {"parent": "16", "gens": "14", "lineNo": "11", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 11, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "false"}, "variantId  57": {"parent": "17", "gens": "14", "lineNo": "17", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 17, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  58": {"parent": "18", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 26, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  59": {"parent": "19", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 28, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  60": {"parent": "20", "gens": "14", "lineNo": "14", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 14, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  61": {"parent": "21", "gens": "14", "lineNo": "17", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 17, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "false"}, "variantId  62": {"parent": "22", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  63": {"parent": "23", "gens": "14", "lineNo": "14", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 14, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  64": {"parent": "24", "gens": "14", "lineNo": "17", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 17, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  65": {"parent": "25", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  65"}, "variantId  66": {"parent": "26", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 28, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  67": {"parent": "27", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `longest = length + 1` (spoon.support.reflect.code.CtAssignmentImpl) \n---MP=bugLis.App line: 28, pointed element: CtAssignmentImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `longest = length + 1` (spoon.support.reflect.code.CtAssignmentImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  68": {"parent": "28", "gens": "14", "lineNo": "17", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 17, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  69": {"parent": "29", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  70": {"parent": "30", "gens": "14", "lineNo": "24", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 24, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "false"}, "variantId  71": {"parent": "31", "gens": "14", "lineNo": "14", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 14, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "false"}, "variantId  72": {"parent": "32", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  72"}, "variantId  73": {"parent": "33", "gens": "14", "lineNo": "14", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 14, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  74": {"parent": "34", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  74"}, "variantId  75": {"parent": "35", "gens": "14", "lineNo": "33", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return longest ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 33, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return longest ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  76": {"parent": "36", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 20, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  77": {"parent": "37", "gens": "14", "lineNo": "11", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 11, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  78": {"parent": "38", "gens": "14", "lineNo": "14", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 14, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  79": {"parent": "39", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 18, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  80": {"parent": "40", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 31, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}}, "generation 2": {"variantId  82": {"parent": "1", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  83": {"parent": "2", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  83"}, "variantId  84": {"parent": "3", "gens": "14", "lineNo": "12", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 12, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "false"}, "variantId  85": {"parent": "4", "gens": "14", "lineNo": "17", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...]` (spoon.support.reflect.code.CtForEachImpl) \n---MP=bugLis.App line: 17, pointed element: CtForEachImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...]` (spoon.support.reflect.code.CtForEachImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  86": {"parent": "5", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 26, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  87": {"parent": "6", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  88": {"parent": "7", "gens": "14", "lineNo": "11", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 11, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "false"}, "variantId  89": {"parent": "8", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 28, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  90": {"parent": "9", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 31, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  91": {"parent": "10", "gens": "14", "lineNo": "12", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 12, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  92": {"parent": "11", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 28, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  93": {"parent": "12", "gens": "14", "lineNo": "33", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return longest ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 33, pointed element: CtReturnImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return longest ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  94": {"parent": "13", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 31, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  95": {"parent": "14", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  95"}, "variantId  96": {"parent": "15", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  96"}, "variantId  97": {"parent": "16", "gens": "14", "lineNo": "17", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...]` (spoon.support.reflect.code.CtForEachImpl) \n---MP=bugLis.App line: 17, pointed element: CtForEachImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...]` (spoon.support.reflect.code.CtForEachImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  98": {"parent": "17", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  98"}, "variantId  99": {"parent": "18", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 15, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  100": {"parent": "19", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  100"}, "variantId  101": {"parent": "20", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  102": {"parent": "21", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  102"}, "variantId  103": {"parent": "22", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  103"}, "variantId  104": {"parent": "23", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `longest = length + 1` (spoon.support.reflect.code.CtAssignmentImpl) \n---MP=bugLis.App line: 28, pointed element: CtAssignmentImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `longest = length + 1` (spoon.support.reflect.code.CtAssignmentImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  105": {"parent": "24", "gens": "14", "lineNo": "17", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 17, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  106": {"parent": "25", "gens": "14", "lineNo": "24", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 24, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  107": {"parent": "26", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 20, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  108": {"parent": "27", "gens": "14", "lineNo": "12", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 12, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  109": {"parent": "28", "gens": "14", "lineNo": "24", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 24, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "false"}, "variantId  110": {"parent": "29", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 26, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  111": {"parent": "30", "gens": "14", "lineNo": "12", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 12, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  112": {"parent": "31", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  112"}, "variantId  113": {"parent": "32", "gens": "14", "lineNo": "11", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 11, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  114": {"parent": "33", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 31, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  115": {"parent": "34", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `longest = length + 1` (spoon.support.reflect.code.CtAssignmentImpl) \n---MP=bugLis.App line: 31, pointed element: CtAssignmentImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `longest = length + 1` (spoon.support.reflect.code.CtAssignmentImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  116": {"parent": "35", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  116"}, "variantId  117": {"parent": "36", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  117"}, "variantId  118": {"parent": "37", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  118"}, "variantId  119": {"parent": "38", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 26, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  120": {"parent": "39", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  120"}, "variantId  121": {"parent": "81", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  121"}}, "generation 3": {"variantId  123": {"parent": "1", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  123"}, "variantId  124": {"parent": "2", "gens": "14", "lineNo": "11", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 11, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  125": {"parent": "3", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  125"}, "variantId  126": {"parent": "4", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  126"}, "variantId  127": {"parent": "5", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 20, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  128": {"parent": "6", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 27, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  129": {"parent": "7", "gens": "14", "lineNo": "12", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 12, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  130": {"parent": "8", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 15, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  131": {"parent": "9", "gens": "14", "lineNo": "24", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 24, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  132": {"parent": "10", "gens": "14", "lineNo": "24", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 24, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  133": {"parent": "11", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 31, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  134": {"parent": "12", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  134"}, "variantId  135": {"parent": "13", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  135"}, "variantId  136": {"parent": "14", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  136"}, "variantId  137": {"parent": "15", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  137"}, "variantId  138": {"parent": "16", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 27, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  139": {"parent": "17", "gens": "14", "lineNo": "17", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 17, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  140": {"parent": "18", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  140"}, "variantId  141": {"parent": "19", "gens": "14", "lineNo": "14", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 14, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  142": {"parent": "20", "gens": "14", "lineNo": "11", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 11, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  143": {"parent": "21", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  143"}, "variantId  144": {"parent": "22", "gens": "14", "lineNo": "24", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 24, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "false"}, "variantId  145": {"parent": "23", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  145"}, "variantId  146": {"parent": "24", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  146"}, "variantId  147": {"parent": "25", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 19, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  148": {"parent": "26", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  148"}, "variantId  149": {"parent": "27", "gens": "14", "lineNo": "24", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 24, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  150": {"parent": "28", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 15, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  151": {"parent": "29", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  151"}, "variantId  152": {"parent": "30", "gens": "14", "lineNo": "11", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 11, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  153": {"parent": "31", "gens": "14", "lineNo": "17", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 17, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  154": {"parent": "32", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 19, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  155": {"parent": "33", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  155"}, "variantId  156": {"parent": "34", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  156"}, "variantId  157": {"parent": "35", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 18, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  158": {"parent": "36", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 27, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  159": {"parent": "37", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 28, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  160": {"parent": "38", "gens": "14", "lineNo": "24", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 24, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  161": {"parent": "39", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 27, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  162": {"parent": "122", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 26, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}}, "generation 4": {"variantId  164": {"parent": "1", "gens": "14", "lineNo": "33", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return longest ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 33, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return longest ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  165": {"parent": "2", "gens": "14", "lineNo": "12", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 12, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "false"}, "variantId  166": {"parent": "3", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 28, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  167": {"parent": "4", "gens": "14", "lineNo": "11", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 11, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  168": {"parent": "5", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 18, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  169": {"parent": "6", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 28, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  170": {"parent": "7", "gens": "14", "lineNo": "11", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 11, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  171": {"parent": "8", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 26, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  172": {"parent": "9", "gens": "14", "lineNo": "17", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 17, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  173": {"parent": "10", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `ends.put(length + 1, i)` (spoon.support.reflect.code.CtInvocationImpl) \n---MP=bugLis.App line: 27, pointed element: CtInvocationImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `ends.put(length + 1, i)` (spoon.support.reflect.code.CtInvocationImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  174": {"parent": "11", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 15, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  175": {"parent": "12", "gens": "14", "lineNo": "14", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 14, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  176": {"parent": "13", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `longest = length + 1` (spoon.support.reflect.code.CtAssignmentImpl) \n---MP=bugLis.App line: 26, pointed element: CtAssignmentImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `longest = length + 1` (spoon.support.reflect.code.CtAssignmentImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  177": {"parent": "14", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 31, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  178": {"parent": "15", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `ends.put(length + 1, i)` (spoon.support.reflect.code.CtInvocationImpl) \n---MP=bugLis.App line: 26, pointed element: CtInvocationImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `ends.put(length + 1, i)` (spoon.support.reflect.code.CtInvocationImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  179": {"parent": "16", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  179"}, "variantId  180": {"parent": "17", "gens": "14", "lineNo": "12", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 12, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  181": {"parent": "18", "gens": "14", "lineNo": "24", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 24, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  182": {"parent": "19", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  182"}, "variantId  183": {"parent": "20", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  183"}, "variantId  184": {"parent": "21", "gens": "14", "lineNo": "17", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 17, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "false"}, "variantId  185": {"parent": "22", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  185"}, "variantId  186": {"parent": "23", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 18, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  187": {"parent": "24", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  187"}, "variantId  188": {"parent": "25", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  188"}, "variantId  189": {"parent": "26", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `ends.put(length + 1, i)` (spoon.support.reflect.code.CtInvocationImpl) \n---MP=bugLis.App line: 26, pointed element: CtInvocationImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `ends.put(length + 1, i)` (spoon.support.reflect.code.CtInvocationImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "0.0"}, "variantId  190": {"parent": "27", "gens": "14", "lineNo": "17", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 17, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  191": {"parent": "28", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 15, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  192": {"parent": "29", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  192"}, "variantId  193": {"parent": "30", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  193"}, "variantId  194": {"parent": "31", "gens": "14", "lineNo": "17", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 17, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  195": {"parent": "32", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 19, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  196": {"parent": "33", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 26, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  197": {"parent": "34", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  197"}, "variantId  198": {"parent": "35", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  198"}, "variantId  199": {"parent": "36", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  199"}, "variantId  200": {"parent": "37", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  200"}, "variantId  201": {"parent": "38", "gens": "14", "lineNo": "24", "operations": "operation: OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 24, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "ReplaceOp", "childCompiles": "false"}, "variantId  202": {"parent": "39", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  202"}, "variantId  203": {"parent": "163", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 20, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}}, "generation 5": {"variantId  205": {"parent": "1", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `longest = length + 1` (spoon.support.reflect.code.CtAssignmentImpl) \n---MP=bugLis.App line: 26, pointed element: CtAssignmentImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `longest = length + 1` (spoon.support.reflect.code.CtAssignmentImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  206": {"parent": "2", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 28, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  207": {"parent": "3", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 15, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  208": {"parent": "4", "gens": "14", "lineNo": "14", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 14, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  209": {"parent": "5", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 28, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  210": {"parent": "6", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 18, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  211": {"parent": "7", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  211"}, "variantId  212": {"parent": "8", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  212"}, "variantId  213": {"parent": "9", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  213"}, "variantId  214": {"parent": "10", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 26, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  215": {"parent": "11", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  215"}, "variantId  216": {"parent": "12", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 19, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  217": {"parent": "13", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  217"}, "variantId  218": {"parent": "14", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  218"}, "variantId  219": {"parent": "15", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  219"}, "variantId  220": {"parent": "16", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  220"}, "variantId  221": {"parent": "17", "gens": "14", "lineNo": "14", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 14, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  222": {"parent": "18", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 31, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  223": {"parent": "19", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  223"}, "variantId  224": {"parent": "20", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  224"}, "variantId  225": {"parent": "21", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  225"}, "variantId  226": {"parent": "22", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 26, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  227": {"parent": "23", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  227"}, "variantId  228": {"parent": "24", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  228"}, "variantId  229": {"parent": "25", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  229"}, "variantId  230": {"parent": "26", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  230"}, "variantId  231": {"parent": "27", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 28, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  232": {"parent": "28", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 19, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  233": {"parent": "29", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  233"}, "variantId  234": {"parent": "30", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 26, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  235": {"parent": "31", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  235"}, "variantId  236": {"parent": "32", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...]` (spoon.support.reflect.code.CtForEachImpl) \n---MP=bugLis.App line: 15, pointed element: CtForEachImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...]` (spoon.support.reflect.code.CtForEachImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  237": {"parent": "33", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  237"}, "variantId  238": {"parent": "34", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  238"}, "variantId  239": {"parent": "35", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 20, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  240": {"parent": "36", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  240"}, "variantId  241": {"parent": "37", "gens": "14", "lineNo": "14", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 14, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  242": {"parent": "38", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 15, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  243": {"parent": "39", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 27, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  244": {"parent": "204", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  244"}}, "generation 6": {"variantId  246": {"parent": "1", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  246"}, "variantId  247": {"parent": "2", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  247"}, "variantId  248": {"parent": "3", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `longest = length + 1` (spoon.support.reflect.code.CtAssignmentImpl) \n---MP=bugLis.App line: 27, pointed element: CtAssignmentImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `longest = length + 1` (spoon.support.reflect.code.CtAssignmentImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  249": {"parent": "4", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 20, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  250": {"parent": "5", "gens": "14", "lineNo": "24", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 24, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  251": {"parent": "6", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 27, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  252": {"parent": "7", "gens": "14", "lineNo": "11", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 11, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  253": {"parent": "8", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 27, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  254": {"parent": "9", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `ends.put(length + 1, i)` (spoon.support.reflect.code.CtInvocationImpl) \n---MP=bugLis.App line: 28, pointed element: CtInvocationImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `ends.put(length + 1, i)` (spoon.support.reflect.code.CtInvocationImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  255": {"parent": "10", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 15, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  256": {"parent": "11", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  256"}, "variantId  257": {"parent": "12", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `ends.put(length + 1, i)` (spoon.support.reflect.code.CtInvocationImpl) \n---MP=bugLis.App line: 28, pointed element: CtInvocationImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `ends.put(length + 1, i)` (spoon.support.reflect.code.CtInvocationImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  258": {"parent": "13", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  258"}, "variantId  259": {"parent": "14", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  259"}, "variantId  260": {"parent": "15", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 28, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  261": {"parent": "16", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 15, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  262": {"parent": "17", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  262"}, "variantId  263": {"parent": "18", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  263"}, "variantId  264": {"parent": "19", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 19, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  265": {"parent": "20", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 26, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  266": {"parent": "21", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  266"}, "variantId  267": {"parent": "22", "gens": "14", "lineNo": "24", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 24, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  268": {"parent": "23", "gens": "14", "lineNo": "12", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 12, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  269": {"parent": "24", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  269"}, "variantId  270": {"parent": "25", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 20, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  271": {"parent": "26", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 31, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  272": {"parent": "27", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 31, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  273": {"parent": "28", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 26, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  274": {"parent": "29", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  274"}, "variantId  275": {"parent": "30", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  275"}, "variantId  276": {"parent": "31", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 27, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  277": {"parent": "32", "gens": "14", "lineNo": "14", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 14, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  278": {"parent": "33", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 19, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  279": {"parent": "34", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 18, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  280": {"parent": "35", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 18, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  281": {"parent": "36", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 31, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  282": {"parent": "37", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  282"}, "variantId  283": {"parent": "38", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  283"}, "variantId  284": {"parent": "39", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 28, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  285": {"parent": "245", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 27, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}}, "generation 7": {"variantId  287": {"parent": "1", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 31, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  288": {"parent": "2", "gens": "14", "lineNo": "12", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 12, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  289": {"parent": "3", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 20, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  290": {"parent": "4", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 26, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  291": {"parent": "5", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 20, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  292": {"parent": "6", "gens": "14", "lineNo": "17", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 17, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  293": {"parent": "7", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  293"}, "variantId  294": {"parent": "8", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 26, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  295": {"parent": "9", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 31, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  296": {"parent": "10", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 19, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  297": {"parent": "11", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 31, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  298": {"parent": "12", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  298"}, "variantId  299": {"parent": "13", "gens": "14", "lineNo": "12", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 12, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  300": {"parent": "14", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  300"}, "variantId  301": {"parent": "15", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...]` (spoon.support.reflect.code.CtForEachImpl) \n---MP=bugLis.App line: 15, pointed element: CtForEachImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...]` (spoon.support.reflect.code.CtForEachImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  302": {"parent": "16", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  302"}, "variantId  303": {"parent": "17", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  303"}, "variantId  304": {"parent": "18", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 27, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  305": {"parent": "19", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 15, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  306": {"parent": "20", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  306"}, "variantId  307": {"parent": "21", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `longest = length + 1` (spoon.support.reflect.code.CtAssignmentImpl) \n---MP=bugLis.App line: 31, pointed element: CtAssignmentImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `longest = length + 1` (spoon.support.reflect.code.CtAssignmentImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  308": {"parent": "22", "gens": "14", "lineNo": "24", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 24, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  309": {"parent": "23", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  309"}, "variantId  310": {"parent": "24", "gens": "14", "lineNo": "33", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return longest ` -topatch--> `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...]` (spoon.support.reflect.code.CtForEachImpl) \n---MP=bugLis.App line: 33, pointed element: CtForEachImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return longest ` -topatch--> `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...]` (spoon.support.reflect.code.CtForEachImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  311": {"parent": "25", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 18, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  312": {"parent": "26", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  312"}, "variantId  313": {"parent": "27", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  313"}, "variantId  314": {"parent": "28", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 19, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  315": {"parent": "29", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  315"}, "variantId  316": {"parent": "30", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 27, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  317": {"parent": "31", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  317"}, "variantId  318": {"parent": "32", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  318"}, "variantId  319": {"parent": "33", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  319"}, "variantId  320": {"parent": "34", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  320"}, "variantId  321": {"parent": "35", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  321"}, "variantId  322": {"parent": "36", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 18, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  323": {"parent": "37", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 27, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  324": {"parent": "38", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  324"}, "variantId  325": {"parent": "39", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  325"}, "variantId  326": {"parent": "286", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 31, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}}, "generation 8": {"variantId  328": {"parent": "1", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  328"}, "variantId  329": {"parent": "2", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  329"}, "variantId  330": {"parent": "3", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `longest = length + 1` (spoon.support.reflect.code.CtAssignmentImpl) \n---MP=bugLis.App line: 28, pointed element: CtAssignmentImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `longest = length + 1` (spoon.support.reflect.code.CtAssignmentImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  331": {"parent": "4", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  331"}, "variantId  332": {"parent": "5", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 19, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  333": {"parent": "6", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  333"}, "variantId  334": {"parent": "7", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 20, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  335": {"parent": "8", "gens": "14", "lineNo": "24", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 24, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  336": {"parent": "9", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 28, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  337": {"parent": "10", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 20, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  338": {"parent": "11", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  338"}, "variantId  339": {"parent": "12", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 28, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `int i = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  340": {"parent": "13", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  340"}, "variantId  341": {"parent": "14", "gens": "14", "lineNo": "14", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 14, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int i = 0 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  342": {"parent": "15", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `ends.put(length + 1, i)` (spoon.support.reflect.code.CtInvocationImpl) \n---MP=bugLis.App line: 31, pointed element: CtInvocationImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `ends.put(length + 1, i)` (spoon.support.reflect.code.CtInvocationImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  343": {"parent": "16", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  343"}, "variantId  344": {"parent": "17", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  344"}, "variantId  345": {"parent": "18", "gens": "14", "lineNo": "12", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 12, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int longest = 0 ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  346": {"parent": "19", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  346"}, "variantId  347": {"parent": "20", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  347"}, "variantId  348": {"parent": "21", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  348"}, "variantId  349": {"parent": "22", "gens": "14", "lineNo": "24", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 24, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  350": {"parent": "23", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  350"}, "variantId  351": {"parent": "24", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  351"}, "variantId  352": {"parent": "25", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 31, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  353": {"parent": "26", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  353"}, "variantId  354": {"parent": "27", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  354"}, "variantId  355": {"parent": "28", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  355"}, "variantId  356": {"parent": "29", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  356"}, "variantId  357": {"parent": "30", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  357"}, "variantId  358": {"parent": "31", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  358"}, "variantId  359": {"parent": "32", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  359"}, "variantId  360": {"parent": "33", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 20, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  361": {"parent": "34", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  361"}, "variantId  362": {"parent": "35", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  362"}, "variantId  363": {"parent": "36", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  363"}, "variantId  364": {"parent": "37", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 19, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  365": {"parent": "38", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 18, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  366": {"parent": "39", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  366"}, "variantId  367": {"parent": "327", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  367"}}, "generation 9": {"variantId  369": {"parent": "1", "gens": "14", "lineNo": "17", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 17, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  370": {"parent": "2", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 15, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  371": {"parent": "3", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  371"}, "variantId  372": {"parent": "4", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  372"}, "variantId  373": {"parent": "5", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  373"}, "variantId  374": {"parent": "6", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 19, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  375": {"parent": "7", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  375"}, "variantId  376": {"parent": "8", "gens": "14", "lineNo": "24", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 24, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  377": {"parent": "9", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 18, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `int longest = 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  378": {"parent": "10", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  378"}, "variantId  379": {"parent": "11", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  379"}, "variantId  380": {"parent": "12", "gens": "14", "lineNo": "24", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 24, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  381": {"parent": "13", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  381"}, "variantId  382": {"parent": "14", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 15, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  383": {"parent": "15", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  383"}, "variantId  384": {"parent": "16", "gens": "14", "lineNo": "17", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 17, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  385": {"parent": "17", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  385"}, "variantId  386": {"parent": "18", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  386"}, "variantId  387": {"parent": "19", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  387"}, "variantId  388": {"parent": "20", "gens": "14", "lineNo": "17", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 17, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...] ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  389": {"parent": "21", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  389"}, "variantId  390": {"parent": "22", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  390"}, "variantId  391": {"parent": "23", "gens": "14"}, "variantId  392": {"parent": "24", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  392"}, "variantId  393": {"parent": "25", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  393"}, "variantId  394": {"parent": "26", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  394"}, "variantId  395": {"parent": "27", "gens": "14", "lineNo": "24", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 24, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0 ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  396": {"parent": "28", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `ends.put(length + 1, i)` (spoon.support.reflect.code.CtInvocationImpl) \n---MP=bugLis.App line: 31, pointed element: CtInvocationImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `ends.put(length + 1, i)` (spoon.support.reflect.code.CtInvocationImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  397": {"parent": "29", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  397"}, "variantId  398": {"parent": "30", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  398"}, "variantId  399": {"parent": "31", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  399"}, "variantId  400": {"parent": "32", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `ends.put(length + 1, i)` (spoon.support.reflect.code.CtInvocationImpl) \n---MP=bugLis.App line: 27, pointed element: CtInvocationImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `ends.put(length + 1, i)` (spoon.support.reflect.code.CtInvocationImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  401": {"parent": "33", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  401"}, "variantId  402": {"parent": "34", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  402"}, "variantId  403": {"parent": "35", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  403"}, "variantId  404": {"parent": "36", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `longest = length + 1` (spoon.support.reflect.code.CtAssignmentImpl) \n---MP=bugLis.App line: 27, pointed element: CtAssignmentImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `longest = length + 1` (spoon.support.reflect.code.CtAssignmentImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  405": {"parent": "37", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n---MP=bugLis.App line: 20, pointed element: CtReturnImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `return longest` (spoon.support.reflect.code.CtReturnImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  406": {"parent": "38", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  406"}, "variantId  407": {"parent": "39", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  407"}, "variantId  408": {"parent": "368", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 27, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}}, "generation 10": {"variantId  410": {"parent": "1", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 18, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `int length = (!prefix_lengths.isEmpty()) ? java.util.Collections.max(prefix_lengths) : 0` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  411": {"parent": "2", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  411"}, "variantId  412": {"parent": "3", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 19, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  413": {"parent": "4", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  413"}, "variantId  414": {"parent": "5", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  414"}, "variantId  415": {"parent": "6", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  415"}, "variantId  416": {"parent": "7", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  416"}, "variantId  417": {"parent": "8", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  417"}, "variantId  418": {"parent": "9", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  418"}, "variantId  419": {"parent": "10", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  419"}, "variantId  420": {"parent": "11", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  420"}, "variantId  421": {"parent": "12", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  421"}, "variantId  422": {"parent": "13", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 19, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertAfterOp", "childCompiles": "false"}, "variantId  423": {"parent": "14", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  423"}, "variantId  424": {"parent": "15", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  424"}, "variantId  425": {"parent": "16", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  425"}, "variantId  426": {"parent": "17", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  426"}, "variantId  427": {"parent": "18", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  427"}, "variantId  428": {"parent": "19", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  428"}, "variantId  429": {"parent": "20", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  429"}, "variantId  430": {"parent": "21", "gens": "14", "lineNo": "33", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return longest ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 33, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return longest ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  431": {"parent": "22", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  431"}, "variantId  432": {"parent": "23", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  432"}, "variantId  433": {"parent": "24", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  433"}, "variantId  434": {"parent": "25", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  434"}, "variantId  435": {"parent": "26", "gens": "14", "lineNo": "28", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `longest = length + 1 ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  435"}, "variantId  436": {"parent": "27", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 18, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `java.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayList<java.lang.Integer>(1[...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  437": {"parent": "28", "gens": "14", "lineNo": "33", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return longest ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n---MP=bugLis.App line: 33, pointed element: CtUnaryOperatorImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return longest ` -topatch--> `i++` (spoon.support.reflect.code.CtUnaryOperatorImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "true", "fitness": "4.0"}, "variantId  438": {"parent": "29", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  438"}, "variantId  439": {"parent": "30", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n---MP=bugLis.App line: 20, pointed element: CtLocalVariableImpl\n---OP_INSTANCE:\nInsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `java.util.Map<java.lang.Integer, java.lang.Integer> ends = new java.util.HashMap<java.lang.Integer, [...]` (spoon.support.reflect.code.CtLocalVariableImpl) \n\n", "operationName": "InsertBeforeOp", "childCompiles": "false"}, "variantId  440": {"parent": "31", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  440"}, "variantId  441": {"parent": "32", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  441"}, "variantId  442": {"parent": "33", "gens": "14", "lineNo": "26", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((length == longest) || (val < arr[ends.get(length + 1)])) { \tends.put(length + 1, i); \tlongest =[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  442"}, "variantId  443": {"parent": "34", "gens": "14", "lineNo": "19", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (arr[ends.get(j)] < val) { \tprefix_lengths.add(j); } ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  443"}, "variantId  444": {"parent": "35", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  444"}, "variantId  445": {"parent": "36", "gens": "14", "lineNo": "18", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 1; j < (longest + 1); j++) { \tif (arr[ends.get(j)] < val) { \t\tprefix_lengths.add(j); \t}[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  445"}, "variantId  446": {"parent": "37", "gens": "14", "lineNo": "15", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (int val : arr) {  \tjava.util.ArrayList<java.lang.Integer> prefix_lengths = new java.util.ArrayL[...] ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  446"}, "variantId  447": {"parent": "38", "gens": "14", "lineNo": "20", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prefix_lengths.add(j) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  447"}, "variantId  448": {"parent": "39", "gens": "14", "lineNo": "27", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ends.put(length + 1, i) ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  448"}, "variantId  449": {"parent": "409", "gens": "14", "lineNo": "31", "operations": "operation: OP_INSTANCE:\nRemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) \n\n", "operationName": "RemoveOp", "childCompiles": "true", "fitness": "4.0", "variantId": "variantId  449"}}}